//
//  CoinViewController.swift
//  MarketCoins
//
//  Created by Juliano Sgarbossa on 14/05/25.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import DGCharts

protocol CoinDisplayLogic: AnyObject {
    func displaySomething(viewModel: Coin.Something.ViewModel)
}

class CoinViewController: ViewController {
    
    @IBOutlet weak var coinValuesView: UIView! {
        didSet {
            coinValuesView.isHidden = true
        }
    }
    
    @IBOutlet weak var coinCurrentPriceBaseCurrencyLabel: UILabel!
    @IBOutlet weak var changePorcentageLabel: UILabel!
    @IBOutlet weak var marketDataCoinCurrentPriceLabel: UILabel!
    @IBOutlet weak var marketDataCoinIconImageView: UIImageView!
    @IBOutlet weak var marketDataCoinSymbolLabel: UILabel!
    @IBOutlet weak var marketDataComparationActionView: UIView!
    @IBOutlet weak var marketDataComparationCurrencyPriceLabel: UILabel!
    @IBOutlet weak var marketDataComparationSymbolLabel: UILabel!
    @IBOutlet weak var coinGraphicView: UIView! {
        didSet {
            coinGraphicView.isHidden = true
        }
    }
    
    @IBOutlet weak var marketChartView: LineChartView!
    @IBOutlet weak var marketChartOneHourView: UIView!
    @IBOutlet weak var marketChartOneDayView: UIView!
    @IBOutlet weak var marketChartOneWeekView: UIView!
    @IBOutlet weak var marketChartOneMonthView: UIView!
    @IBOutlet weak var marketChartThreeMonthsView: UIView!
    @IBOutlet weak var marketChartOneYearView: UIView!
    @IBOutlet weak var marketChartMaximumView: UIView!
    @IBOutlet weak var priceChangePercentageOneDayLabel: UILabel!
    @IBOutlet weak var priceChangePercentageOneWeekLabel: UILabel!
    @IBOutlet weak var priceChangePercentageTwoWeeksLabel: UILabel!
    @IBOutlet weak var priceChangePercentageOneMonthLabel: UILabel!
    @IBOutlet weak var priceChangePercentageTwoMonthsLabel: UILabel!
    @IBOutlet weak var priceChangePercentageOneYearLabel: UILabel!
    
    @IBOutlet weak var coinResumeView: UIView! {
        didSet {
            coinResumeView.isHidden = true
        }
    }
    
    @IBOutlet weak var marketClassificationRankLabel: UILabel!
    @IBOutlet weak var marketCapitalizationLabel: UILabel!
    @IBOutlet weak var fullyDilutedValuationLabel: UILabel!
    @IBOutlet weak var volumeBusinessLabel: UILabel!
    @IBOutlet weak var twentyFourHourHighLabel: UILabel!
    @IBOutlet weak var twentyFourHourLowLabel: UILabel!
    @IBOutlet weak var supplyAvailableLabel: UILabel!
    @IBOutlet weak var totalSupplyLabel: UILabel!
    @IBOutlet weak var maximumSupplyLabel: UILabel!
    @IBOutlet weak var maximumValueLabel: UILabel!
    @IBOutlet weak var maximumPercentageLabel: UILabel!
    @IBOutlet weak var maximumDateLabel: UILabel!
    @IBOutlet weak var minimumValueLabel: UILabel!
    @IBOutlet weak var minimumPercentageLabel: UILabel!
    @IBOutlet weak var minimumDateLabel: UILabel!
    
    var interactor: CoinBusinessLogic?
    var router: (NSObjectProtocol & CoinRoutingLogic & CoinDataPassing)?
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
    }
    
    // MARK: Setup
    override func setup() {
        let viewController = self
        let interactor = CoinInteractor()
        let presenter = CoinPresenter()
        let router = CoinRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    func doSomething() {
        let request = Coin.Something.Request()
        interactor?.doSomething(request: request)
    }
}

extension CoinViewController: CoinDisplayLogic {
    func displaySomething(viewModel: Coin.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}
